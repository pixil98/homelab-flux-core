apiVersion: apps/v1
kind: Deployment
metadata:
  name: postfix-server
  namespace: mail
  labels:
    app.kubernetes.io/name: "postfix"
    app.kubernetes.io/instance: "postfix"
    app.kubernetes.io/component: "server"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "postfix"
      app.kubernetes.io/instance: "postfix"
      app.kubernetes.io/component: "server"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "postfix"
        app.kubernetes.io/instance: "postfix"
        app.kubernetes.io/component: "server"
    spec:
      containers:
        - name:  postfix
          image: registry.lab.reisman.org/proxy.docker.io/boky/postfix:4.1.0
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: "America/Chicago"
            - name: FORCE_COLOR
              value: "1"
            - name: LOG_FORMAT
              value: "plain"  # or JSON

            - name: ALLOWED_SENDER_DOMAINS
              value: "${vals_info_cluster_domain} ${vals_apps_mail_virtualDomains}"

            # Relay
            - name: RELAYHOST
              value: "${vals_apps_mail_relayHost}"

            # Postfix
            - name: POSTFIX_myhostname
              value: "mail.${vals_info_cluster_domain}"

            # Postfix Auth
            - name: POSTFIX_smtpd_relay_restrictions
              value: "permit_sasl_authenticated, reject"
            - name: POSTFIX_smtpd_sasl_type
              value: "dovecot"
            - name: POSTFIX_smtpd_sasl_path
              value: "private/auth"
            - name: POSTFIX_smtpd_sasl_auth_enable
              value: "yes"
             
          ports:
            - name: smtp
              containerPort: 25
              protocol: TCP
            - name: submission
              containerPort: 587
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: health
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: health
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          volumeMounts: []
      volumes: []
