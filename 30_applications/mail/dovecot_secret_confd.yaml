apiVersion: v1
kind: Secret
metadata:
  name: dovecot-custom-ext
  namespace: mail
type: Opaque
stringData:
  auth-oauth2.conf.ext: |
    auth_mechanisms {
      xoauth2 = yes
      oauthbearer = yes
    }

    oauth2 {
      tokeninfo_url = https://auth.${vals_info_cluster_domain}/application/o/userinfo/?access_token=
      introspection_url = https://${secrets_apps_auth_applications_dovecot_clientId}:${secrets_apps_auth_applications_dovecot_clientSecret}@auth.${vals_info_cluster_domain}/application/o/introspect/
      introspection_mode = post
      force_introspection = yes
      active_attribute = active
      active_value = true
      username_attribute = email
    }

    # with local validation
    #oauth2 {
    #  introspection_mode = local
    #  username_attribute = email
    #  oauth2_local_validation {
    #    dict fs {
    #      fs posix {
    #        prefix = /etc/dovecot/oauth2-keys/
    #      }
    #    }
    #  }
    #}

  auth-ldap.conf.ext: |
    # Authentication for LDAP users. Included from auth.conf.
    #
    # <https://doc.dovecot.org/latest/core/config/auth/databases/ldap.html>

    ## See <https://doc.dovecot.org/latest/core/config/dict.html#ldap>
    
    ldap_uris = ldap://authentik-outpost-ldap.auth.svc.cluster.local
    ldap_auth_dn = cn=${secrets_apps_auth_authentik_outpost_ldap_username},ou=users,dc=ldap,dc=goauthentik,dc=io
    ldap_auth_dn_password = ${secrets_apps_auth_authentik_outpost_ldap_password}
    ldap_base = dc=ldap,dc=goauthentik,dc=io

    passdb ldap {
      ldap_filter =  (&(objectClass=user)(mail=%{user})(memberOf=cn=dovecot,ou=groups,dc=ldap,dc=goauthentik,dc=io)(ak-active=true))
      ldap_bind = yes

    #  fields {
        # user=%{ldap:uid}
        # password=%{ldap:userPassword}
        # userdb_home=%{ldap:homeDirectory}
        # userdb_uid=%{ldap:uidNumber}
        # userdb_gid=%{ldap:gidNumber}
    #  }
    }

    # "prefetch" user database means that the passdb already provided the
    # needed information and there's no need to do a separate userdb lookup.
    # <https://doc.dovecot.org/latest/core/config/auth/databases/prefetch.html>
    #userdb prefetch {
    #}

    userdb ldap {
      driver = ldap
      ldap_filter = (&(objectClass=user)(mail=%{user})(memberOf=cn=dovecot,ou=groups,dc=ldap,dc=goauthentik,dc=io)(ak-active=true))

    # Default fields can be used to specify defaults that LDAP may override
    #  fields {
    #    home=/home/virtual/%{user}
    #  }
    }

    # If you don't have any user-specific settings, you can avoid the userdb LDAP
    # lookup by using userdb static instead of userdb ldap, for example:
    # <https://doc.dovecot.org/latest/core/config/auth/databases/static.html>
    #userdb static {
      #fields {
      #  uid = vmail
      #  gid = vmail
      #  home = /var/vmail/%{user}
      #}
    #}

  auth-static.conf.ext: |
    # Static passdb. Included from auth.conf.

    # This can be used for situations where Dovecot doesn't need to verify the
    # username or the password, or if there is a single password for all users:
    #
    #  - proxy frontend, where the backend verifies the password
    #  - proxy backend, where the frontend already verified the password
    #  - authentication with SSL certificates
    #  - simple testing
    # 
    # Each passdb must have unique name, but if you only use it once per driver
    # you can use driver name as passdb/userdb section name.

    #passdb static {
    #  fields {
    #    proxy = y
    #    host = %{user|md5|substr(1)}.example.com
    #    nopassword = y
    #  }
    #}

    #passdb static2 {
    #  driver = static
    #  fields {
    #    password = test
    #  }
    #}

    userdb static {
      fields {
        uid = vmail
        gid = vmail
        home = /var/vmail/%{user | domain}/%{user | username}
      }
    }
