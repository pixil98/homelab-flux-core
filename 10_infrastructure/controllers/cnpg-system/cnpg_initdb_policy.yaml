apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingAdmissionPolicy
metadata:
  name: cnpg-initdb-policy
  namespace: cnpg-system
spec:
  matchConstraints:
    resourceRules:
      - apiGroups: ["batch"]
        apiVersions: ["v1"]
        operations: ["CREATE"]
        resources: ["jobs"]
  matchConditions:
    - name: cnpg-initdb-label
      expression: "'cnpg.io/jobRole' in object.metadata.labels && object.metadata.labels['cnpg.io/jobRole'] == 'initdb'"
    - name: has-initdb-container
      expression: "object.spec.template.spec.containers.exists(c, c.name == 'initdb')"
  failurePolicy: Fail
  reinvocationPolicy: IfNeeded
  mutations:
    - patchType: "JSONPatch"
      jsonPatch:
        expression: >
          [
            JSONPatch{
              op: "add",
              path: "/spec/template/spec/containers/"
                + string(object.spec.template.spec.containers.map(c, c.name).indexOf("initdb"))
                + "/env/-",
              value: Object.spec.template.spec.containers.env{
                name: "ORIGINAL_FULL_CMD",
                value: 
                  object.spec.template.spec.containers[
                    object.spec.template.spec.containers.map(c, c.name).indexOf("initdb")
                  ].command.join(" ")
              }
            }
          ]
    - patchType: "JSONPatch"
      jsonPatch:
        expression: >
          [
            JSONPatch{
              op: "replace",
              path: "/spec/template/spec/containers/"
                    + string(object.spec.template.spec.containers.map(c, c.name).indexOf("initdb"))
                    + "/command",
              value: ["/bin/bash","-c"]
            }
          ]
    - patchType: "JSONPatch"
      jsonPatch:
        expression: >
          [
            JSONPatch{
              op: "add",
              path: "/spec/template/spec/containers/"
                    + string(object.spec.template.spec.containers.map(c, c.name).indexOf("initdb"))
                    + "/args",
              value: [
                [
                  "set -e",
                  "",
                  "echo \"Checking if folder $PGDATA already exists\"",
                  "if [ -d \"$PGDATA\" ]; then",
                  "  echo \"✓ Folder $PGDATA already exists, reusing it.\"",
                  "  exit 0",
                  "fi",
                  "",
                  "echo \"✗ Folder $PGDATA doesn't exist yet\"",
                  "echo \"→ Run original CloudNativePG init...\"",
                  "exec /bin/sh -c \"$ORIGINAL_FULL_CMD\""
                ].join("\n")
              ]
            }
          ]
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingAdmissionPolicyBinding
metadata:
  name: cnpg-initdb-policy-binding
spec:
  policyName: cnpg-initdb-policy
