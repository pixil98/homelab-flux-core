apiVersion: v1
kind: Secret
metadata:
  name: authentik-blueprint-ldap
  namespace: auth
type: Opaque
stringData:
  ldap.yaml: |
    # yaml-language-server: $schema=https://goauthentik.io/blueprints/schema.json
    version: 1
    metadata: { name: Custom - LDAP }
    entries:
      - model: authentik_core.group
        id: ldapsearch
        state: present
        identifiers: { name: ldapsearch }
        attrs: { name: ldapsearch }

      - model: authentik_core.user
        state: present
        identifiers: { username: ${secrets_apps_auth_authentik_outpost_ldap_username} }
        attrs:
          name: ${secrets_apps_auth_authentik_outpost_ldap_username}
          type: service_account
          is_active: true
          groups: [ !KeyOf ldapsearch ]
          path: goauthentik.io/service-accounts
          password: ${secrets_apps_auth_authentik_outpost_ldap_password}

      - model: authentik_providers_ldap.ldapprovider
        state: present
        id: ldap
        identifiers: { name: ldap }
        attrs:
          authentication_flow: !Find [authentik_flows.flow, [slug, default-authentication-flow]]
          authorization_flow: !Find [authentik_flows.flow, [slug, default-provider-authorization-explicit-consent]]
          search_group: !KeyOf ldapsearch
          certificate: !Find [authentik_crypto.CertificateKeyPair, [name, auth.${vals_info_cluster_domain}]]
          tls_server_name: auth.${vals_info_cluster_domain}
          base_dn: DC=ldap,DC=goauthentik,DC=io
          search_mode: "cached"
          bind_mode: "direct"
          mfa_support: false

      - model: authentik_outposts.outpost
        state: present
        identifiers: { name: LDAP Outpost }
        attrs:
          type: ldap
          providers: [ !KeyOf ldap ]
          config: {}
