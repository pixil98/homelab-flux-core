apiVersion: v1
kind: Secret
metadata:
  name: authentik-blueprint-dovecot
  namespace: auth
type: Opaque
stringData:
  dovecot.yaml: |
    # yaml-language-server: $schema=https://goauthentik.io/blueprints/schema.json
    version: 1
    metadata:
      name: Custom - Dovecot
    entries:
      - model: authentik_providers_oauth2.scopemapping
        identifiers:
          scope_name: dovecot_profile
        state: present
        attrs:
          name: "custom OAuth Mapping: OpenID 'dovecot_profile'"
          scope_name: dovecot_profile
          description: "Username + active for Dovecot"
          expression: |
            return {
              "preferred_username": request.user.username,
              "active": request.user.is_active,
            }

      # OAuth2/OIDC provider used only as the issuer for tokens Dovecot validates.
      - model: authentik_providers_oauth2.oauth2provider
        id: dovecot
        identifiers: { name: dovecot }
        state: present
        attrs:
          authentication_flow: !Find [authentik_flows.flow, [slug, default-authentication-flow]]
          authorization_flow: !Find [authentik_flows.flow, [slug, default-provider-authorization-explicit-consent]]
          invalidation_flow: !Find [authentik_flows.flow, [slug, default-provider-invalidation-flow]]
          client_type: confidential
          client_id: ${secrets_apps_auth_applications_dovecot_clientId}
          client_secret: ${secrets_apps_auth_applications_dovecot_clientSecret}
          # No redirect_uris needed for Dovecot
          access_code_validity: minutes=1
          access_token_validity: minutes=30
          signing_key: !Find [authentik_crypto.CertificateKeyPair, [name, auth.${vals_info_cluster_domain}]]
          property_mappings:
            - !Find [authentik_providers_oauth2.ScopeMapping, [scope_name, email]]
            - !Find [authentik_providers_oauth2.ScopeMapping, [scope_name, openid]]
            - !Find [authentik_providers_oauth2.ScopeMapping, [scope_name, dovecot_profile]]
